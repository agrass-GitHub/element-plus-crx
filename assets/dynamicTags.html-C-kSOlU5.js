import{_ as o,c as u,b as n,e as a,w as c,a as i,d as r,r as t,o as d}from"./app-DswKEVy6.js";const k={},m={href:"https://element-plus.gitee.io/zh-CN/component/tag.html#tag-%E5%B1%9E%E6%80%A7",target:"_blank",rel:"noopener noreferrer"};function g(v,s){const l=t("dynamicTags"),p=t("ClientOnly"),e=t("ExternalLinkIcon");return d(),u("div",null,[s[12]||(s[12]=n("h1",{id:"dynamictags-动态编辑标签",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#dynamictags-动态编辑标签"},[n("span",null,"dynamicTags 动态编辑标签")])],-1)),s[13]||(s[13]=n("p",null,"一个可添加删除的动态编辑标签，常用于搭配表单。",-1)),s[14]||(s[14]=n("h2",{id:"基础使用",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#基础使用"},[n("span",null,"基础使用")])],-1)),a(p,null,{default:c(()=>[a(l)]),_:1}),s[15]||(s[15]=i(`<details class="custom-container details"><summary>点击查看代码</summary><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>demo<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AgelDynamicTags</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>value<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:custom-tag-prop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>customTagProp<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>AgelDynamicTags</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>ts<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>

<span class="token keyword">const</span> value <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;不可关闭&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;自定义样式&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;标签1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;标签2&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token keyword">function</span> <span class="token function">customTagProp</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">tag</span><span class="token operator">:</span> string<span class="token punctuation">,</span> <span class="token literal-property property">index</span><span class="token operator">:</span> number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">closable</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;success&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">effect</span><span class="token operator">:</span> <span class="token string">&quot;plain&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">scoped</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">

</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="属性" tabindex="-1"><a class="header-anchor" href="#属性"><span>属性</span></a></h2>`,2)),n("table",null,[s[11]||(s[11]=n("thead",null,[n("tr",null,[n("th",null,"属性"),n("th",null,"类型"),n("th",null,"默认值"),n("th",null,"说明")])],-1)),n("tbody",null,[s[4]||(s[4]=n("tr",null,[n("td",null,"v-model:modelValue"),n("td",null,"string[]"),n("td",null,"-"),n("td",null,"标签列表")],-1)),s[5]||(s[5]=n("tr",null,[n("td",null,"disabled"),n("td",null,"boolean"),n("td",null,"false"),n("td",null,"是否禁用")],-1)),s[6]||(s[6]=n("tr",null,[n("td",null,"createable"),n("td",null,"boolean"),n("td",null,"true"),n("td",null,"是否可创建标签")],-1)),s[7]||(s[7]=n("tr",null,[n("td",null,"closable"),n("td",null,"boolean"),n("td",null,"true"),n("td",null,"是否可关闭标签")],-1)),s[8]||(s[8]=n("tr",null,[n("td",null,"repeatable"),n("td",null,"boolean"),n("td",null,"false"),n("td",null,"是否可创建重复签")],-1)),s[9]||(s[9]=n("tr",null,[n("td",null,"custom-tag-prop"),n("td",null,"(tag: string, index: number) => TagProps"),n("td",null,"-"),n("td",null,"自定义每个标签的 prop")],-1)),s[10]||(s[10]=n("tr",null,[n("td",null,"validate-event"),n("td",null,"boolean"),n("td",null,"true"),n("td",null,"是否触发表单验证")],-1)),n("tr",null,[s[1]||(s[1]=n("td",null,"type, hit, color, effect, round",-1)),s[2]||(s[2]=n("td",null,"-",-1)),s[3]||(s[3]=n("td",null,"-",-1)),n("td",null,[n("a",m,[s[0]||(s[0]=r("ElTag 属性")),a(e)])])])])])])}const y=o(k,[["render",g],["__file","dynamicTags.html.vue"]]),f=JSON.parse('{"path":"/component/dynamicTags.html","title":"dynamicTags 动态编辑标签","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"基础使用","slug":"基础使用","link":"#基础使用","children":[]},{"level":2,"title":"属性","slug":"属性","link":"#属性","children":[]}],"git":{"updatedTime":1703146433000,"contributors":[{"name":"agrass","email":"992951674@qq.com","commits":3},{"name":"liujianfeng","email":"992951674@qq.com","commits":1}]},"filePathRelative":"component/dynamicTags.md"}');export{y as comp,f as data};
